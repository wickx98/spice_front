{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Anuradha\\\\Desktop\\\\New folder\\\\-Spice\\\\frontend\\\\src\\\\components\\\\DashBoard\\\\Statistics\\\\BarChart\\\\Bar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport { Bar } from 'react-chartjs-2';\nimport Message from '../../../Message/Message';\nimport Loader from '../../../Loader/Loader';\nimport { listOrders } from '../../../../actions/orderAction';\n\nconst BarChart = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  let history = useHistory();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const orderList = useSelector(state => state.orderList);\n  const {\n    loading,\n    error\n  } = orderList;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo]);\n  const data = {\n    labels: ['December', 'January'],\n    datasets: [{\n      label: 'Order List',\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: [1, 5, 0]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginTop: \"40px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 24\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      width: 100,\n      height: 180,\n      options: {\n        maintainAspectRatio: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BarChart, \"/lsWbKUAsQC0Jjoj4sTqE59HUJM=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["C:/Users/Anuradha/Desktop/New folder/-Spice/frontend/src/components/DashBoard/Statistics/BarChart/Bar.jsx"],"names":["React","useEffect","useSelector","useDispatch","useHistory","Container","Bar","Message","Loader","listOrders","BarChart","dispatch","history","userLogin","state","userInfo","orderList","loading","error","isAdmin","push","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","marginTop","maintainAspectRatio"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,UAAT,QAA2B,iCAA3B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,MAAIS,OAAO,GAAGR,UAAU,EAAxB;AAEA,QAAMS,SAAS,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACD,SAAhB,CAA7B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeF,SAArB;AAEA,QAAMG,SAAS,GAAGd,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACE,SAAhB,CAA7B;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBF,SAA3B;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,QAAQ,IAAIA,QAAQ,CAACI,OAAzB,EAAkC;AAC9BR,MAAAA,QAAQ,CAACF,UAAU,EAAX,CAAR;AACH,KAFD,MAEO;AACHG,MAAAA,OAAO,CAACQ,IAAR,CAAa,QAAb;AACH;AACJ,GANQ,EAMN,CAACT,QAAD,EAAWC,OAAX,EAAoBG,QAApB,CANM,CAAT;AASA,QAAMM,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,SAAb,CADC;AAETC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAE,YADX;AAEIC,MAAAA,eAAe,EAAE,sBAFrB;AAGIC,MAAAA,WAAW,EAAE,oBAHjB;AAIIC,MAAAA,WAAW,EAAE,CAJjB;AAKIC,MAAAA,oBAAoB,EAAE,sBAL1B;AAMIC,MAAAA,gBAAgB,EAAE,oBANtB;AAOIR,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAPV,KADM;AAFD,GAAb;AAeA,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAES,MAAAA,SAAS,EAAE;AAAb,KAAlB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKb,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GACFC,KAAK,gBAAG,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAH,gBAEC,QAAC,GAAD;AACI,MAAA,IAAI,EAAEG,IADV;AAEI,MAAA,KAAK,EAAE,GAFX;AAGI,MAAA,MAAM,EAAE,GAHZ;AAII,MAAA,OAAO,EAAE;AACLU,QAAAA,mBAAmB,EAAE;AADhB;AAJb;AAAA;AAAA;AAAA;AAAA,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CArDD;;GAAMrB,Q;UAEeP,W,EACHC,U,EAEIF,W,EAGAA,W;;;KARhBQ,Q;AAuDN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Message from '../../../Message/Message'\r\nimport Loader from '../../../Loader/Loader'\r\nimport { listOrders } from '../../../../actions/orderAction'\r\n\r\nconst BarChart = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error } = orderList\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    const data = {\r\n        labels: ['December', 'January'],\r\n        datasets: [\r\n            {\r\n                label: 'Order List',\r\n                backgroundColor: 'rgba(255,99,132,0.2)',\r\n                borderColor: 'rgba(255,99,132,1)',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                hoverBorderColor: 'rgba(255,99,132,1)',\r\n                data: [1, 5, 0]\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <Container style={{ marginTop: \"40px\" }}>\r\n            <h4>Orders</h4>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Bar\r\n                            data={data}\r\n                            width={100}\r\n                            height={180}\r\n                            options={{\r\n                                maintainAspectRatio: false\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BarChart\r\n"]},"metadata":{},"sourceType":"module"}