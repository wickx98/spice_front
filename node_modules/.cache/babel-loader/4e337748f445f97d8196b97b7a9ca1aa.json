{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Anuradha\\\\Desktop\\\\New folder\\\\-Spice\\\\frontend\\\\src\\\\screens\\\\Shipping\\\\ShippingScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CheckoutSteps from './../../components/CheckoutSteps/CheckoutSteps';\nimport FormContainer from '../../components/FormContainer/FormContainer';\nimport { saveShippingAddress } from './../../actions/cartActions.js';\nimport Meta from '../../components/Helmet/Meta';\n\nconst ShippingScreen = ({\n  history\n}) => {\n  _s();\n\n  const cart = useSelector(state => state.cartSeed);\n  const {\n    shippingAddress\n  } = cart;\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      address,\n      city,\n      postalCode,\n      country\n    }));\n    history.push('/payment');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '100px'\n    },\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Meta, {\n        title: \"Agrocare | Shipping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CheckoutSteps, {\n        step1: true,\n        step2: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shipping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        style: {\n          marginBottom: '40px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"address\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: [\"Address \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter address\",\n            value: address,\n            required: true,\n            onChange: e => setAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"city\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: [\"City \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter City\",\n            value: city,\n            required: true,\n            onChange: e => setCity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"postalCode\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: [\"Postal Code \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter postal code\",\n            value: postalCode,\n            required: true,\n            onChange: e => setPostalCode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"country\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: [\"Country \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Country\",\n            value: country,\n            required: true,\n            onChange: e => setCountry(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShippingScreen, \"KT4bLSLmYyT6syAtNpfI2FVSRoE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ShippingScreen;\nexport default ShippingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"sources":["C:/Users/Anuradha/Desktop/New folder/-Spice/frontend/src/screens/Shipping/ShippingScreen.jsx"],"names":["React","useState","Form","Button","useDispatch","useSelector","CheckoutSteps","FormContainer","saveShippingAddress","Meta","ShippingScreen","history","cart","state","cartSeed","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","push","marginTop","marginBottom","color","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n    Form,\r\n    Button,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutSteps from './../../components/CheckoutSteps/CheckoutSteps'\r\nimport FormContainer from '../../components/FormContainer/FormContainer'\r\nimport { saveShippingAddress } from './../../actions/cartActions.js'\r\nimport Meta from '../../components/Helmet/Meta'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const cart = useSelector(state => state.cartSeed)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginTop: '100px' }}>\r\n            <FormContainer>\r\n                <Meta\r\n                    title=\"Agrocare | Shipping\"\r\n                />\r\n                <CheckoutSteps step1 step2 />\r\n                <h1>Shipping</h1>\r\n                <Form onSubmit={submitHandler} style={{ marginBottom: '40px' }}>\r\n                    <Form.Group controlId='address'>\r\n                        <Form.Label>Address <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter address\"\r\n                            value={address}\r\n                            required\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='city'>\r\n                        <Form.Label>City <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter City\"\r\n                            value={city}\r\n                            required\r\n                            onChange={(e) => setCity(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='postalCode'>\r\n                        <Form.Label>Postal Code <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter postal code\"\r\n                            value={postalCode}\r\n                            required\r\n                            onChange={(e) => setPostalCode(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='country'>\r\n                        <Form.Label>Country <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Country\"\r\n                            value={country}\r\n                            required\r\n                            onChange={(e) => setCountry(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit'>Continue</Button>\r\n                </Form>\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n"]},"metadata":{},"sourceType":"module"}