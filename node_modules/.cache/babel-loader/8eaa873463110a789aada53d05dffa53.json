{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Anuradha\\\\Desktop\\\\New folder\\\\-Spice\\\\frontend\\\\src\\\\components\\\\DashBoard\\\\Statistics\\\\Doughnut\\\\Doughnut.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from './../../../../components/Message/Message';\nimport Loader from './../../../../components/Loader/Loader';\nimport { listSupplierProducts } from './../../../../actions/supplierProduct';\nconst data = {\n  labels: ['paddy', 'seeds', 'fruits'],\n  datasets: [{\n    data: [2, 1, 3],\n    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n    hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n  }]\n};\n\nconst DoughnutComponent = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  let history = useHistory();\n  const supplierProductList = useSelector(state => state.supplierProductList);\n  const {\n    loading: loadingProducts,\n    error: errorProducts\n  } = supplierProductList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (!userInfo.isAdmin && !userInfo) {\n      history.push('/login');\n    } else {\n      dispatch(listSupplierProducts());\n    }\n  }, [dispatch, history, userInfo]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        marginTop: \"40px\",\n        textAlign: \"center\"\n      },\n      children: \"Suppliers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), loadingProducts ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 32\n    }, this) : errorProducts ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: errorProducts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DoughnutComponent, \"0klan7coNGcutW3eNkjeesj5rT0=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = DoughnutComponent;\nexport default DoughnutComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoughnutComponent\");","map":{"version":3,"sources":["C:/Users/Anuradha/Desktop/New folder/-Spice/frontend/src/components/DashBoard/Statistics/Doughnut/Doughnut.jsx"],"names":["React","useEffect","Doughnut","useHistory","useDispatch","useSelector","Message","Loader","listSupplierProducts","data","labels","datasets","backgroundColor","hoverBackgroundColor","DoughnutComponent","dispatch","history","supplierProductList","state","loading","loadingProducts","error","errorProducts","userLogin","userInfo","isAdmin","push","marginTop","textAlign"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,0CAApB;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,SAASC,oBAAT,QAAqC,uCAArC;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,CADC;AAETC,EAAAA,QAAQ,EAAE,CAAC;AACPF,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADC;AAEPG,IAAAA,eAAe,EAAE,CACb,SADa,EAEb,SAFa,EAGb,SAHa,CAFV;AAOPC,IAAAA,oBAAoB,EAAE,CAClB,SADkB,EAElB,SAFkB,EAGlB,SAHkB;AAPf,GAAD;AAFD,CAAb;;AAiBA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAE5B,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAIY,OAAO,GAAGb,UAAU,EAAxB;AAEA,QAAMc,mBAAmB,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,mBAAhB,CAAvC;AACA,QAAM;AAAEE,IAAAA,OAAO,EAAEC,eAAX;AAA4BC,IAAAA,KAAK,EAAEC;AAAnC,MAAqDL,mBAA3D;AAEA,QAAMM,SAAS,GAAGlB,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACK,SAAhB,CAA7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeD,SAArB;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACuB,QAAQ,CAACC,OAAV,IAAqB,CAACD,QAA1B,EAAoC;AAChCR,MAAAA,OAAO,CAACU,IAAR,CAAa,QAAb;AACH,KAFD,MAEO;AACHX,MAAAA,QAAQ,CAACP,oBAAoB,EAArB,CAAR;AACH;AACJ,GANQ,EAMN,CAACO,QAAD,EAAWC,OAAX,EAAoBQ,QAApB,CANM,CAAT;AAQA,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAAEG,QAAAA,SAAS,EAAE,MAAb;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKR,eAAe,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GACVE,aAAa,gBAAG,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAH,gBAEP,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEb;AAAhB;AAAA;AAAA;AAAA;AAAA,YALhB;AAAA,kBADJ;AAWH,CA9BD;;GAAMK,iB;UAEeV,W,EACHD,U,EAEcE,W,EAGVA,W;;;KARhBS,iB;AAgCN,eAAeA,iBAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../../../../components/Message/Message'\r\nimport Loader from './../../../../components/Loader/Loader'\r\nimport { listSupplierProducts } from './../../../../actions/supplierProduct'\r\n\r\nconst data = {\r\n    labels: ['paddy', 'seeds', 'fruits'],\r\n    datasets: [{\r\n        data: [2, 1, 3],\r\n        backgroundColor: [\r\n            '#FF6384',\r\n            '#36A2EB',\r\n            '#FFCE56'\r\n        ],\r\n        hoverBackgroundColor: [\r\n            '#FF6384',\r\n            '#36A2EB',\r\n            '#FFCE56'\r\n        ]\r\n    }]\r\n};\r\n\r\nconst DoughnutComponent = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const supplierProductList = useSelector(state => state.supplierProductList)\r\n    const { loading: loadingProducts, error: errorProducts } = supplierProductList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo.isAdmin && !userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            dispatch(listSupplierProducts())\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            <h4 style={{ marginTop: \"40px\", textAlign: \"center\" }}>Suppliers</h4>\r\n            {loadingProducts ? <Loader />\r\n                : errorProducts ? <Message variant='danger'>{errorProducts}</Message>\r\n                    : (\r\n                        <Doughnut data={data} />\r\n                    )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DoughnutComponent\r\n"]},"metadata":{},"sourceType":"module"}