{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCT_MACHINE_LIST_REQUEST, PRODUCT_MACHINE_LIST_SUCCESS, PRODUCT_MACHINE_LIST_FAIL, PRODUCT_MACHINE_DETAILS_REQUEST, PRODUCT_MACHINE_DETAILS_SUCCESS, PRODUCT_MACHINE_DETAILS_FAIL, MACHINE_DELETE_REQUEST, MACHINE_DELETE_SUCCESS, MACHINE_DELETE_FAIL, MACHINE_CREATE_REQUEST, MACHINE_CREATE_SUCCESS, MACHINE_CREATE_FAIL, MACHINE_UPDATE_REQUEST, MACHINE_UPDATE_SUCCESS, MACHINE_UPDATE_FAIL, MACHINE_UPDATE_RESET } from './../constants/productConstants.js';\nexport const listLendMachineProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_MACHINE_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/lendMachines');\n    dispatch({\n      type: PRODUCT_MACHINE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_MACHINE_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listLendMachineProductsDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_MACHINE_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/lendMachines/${id}`);\n    dispatch({\n      type: PRODUCT_MACHINE_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_MACHINE_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteLendMachineProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MACHINE_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/lendMachines/${id}`, config);\n    dispatch({\n      type: MACHINE_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: MACHINE_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createLendMachine = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MACHINE_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/lendMachines`, {}, config);\n    dispatch({\n      type: MACHINE_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: MACHINE_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateLendMachine = machine => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MACHINE_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/lendMachines/${machine._id}`, machine, config);\n    dispatch({\n      type: MACHINE_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: MACHINE_UPDATE_RESET\n    });\n  } catch (error) {\n    dispatch({\n      type: MACHINE_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Anuradha/Desktop/New folder/-Spice/frontend/src/actions/productLendMachinesActions.js"],"names":["axios","PRODUCT_MACHINE_LIST_REQUEST","PRODUCT_MACHINE_LIST_SUCCESS","PRODUCT_MACHINE_LIST_FAIL","PRODUCT_MACHINE_DETAILS_REQUEST","PRODUCT_MACHINE_DETAILS_SUCCESS","PRODUCT_MACHINE_DETAILS_FAIL","MACHINE_DELETE_REQUEST","MACHINE_DELETE_SUCCESS","MACHINE_DELETE_FAIL","MACHINE_CREATE_REQUEST","MACHINE_CREATE_SUCCESS","MACHINE_CREATE_FAIL","MACHINE_UPDATE_REQUEST","MACHINE_UPDATE_SUCCESS","MACHINE_UPDATE_FAIL","MACHINE_UPDATE_RESET","listLendMachineProducts","dispatch","type","data","get","payload","error","response","message","listLendMachineProductsDetails","id","deleteLendMachineProduct","getState","userLogin","userInfo","config","headers","Authorization","token","delete","createLendMachine","post","updateLendMachine","machine","put","_id"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {\r\n    PRODUCT_MACHINE_LIST_REQUEST,\r\n    PRODUCT_MACHINE_LIST_SUCCESS,\r\n    PRODUCT_MACHINE_LIST_FAIL,\r\n    PRODUCT_MACHINE_DETAILS_REQUEST,\r\n    PRODUCT_MACHINE_DETAILS_SUCCESS,\r\n    PRODUCT_MACHINE_DETAILS_FAIL,\r\n    MACHINE_DELETE_REQUEST,\r\n    MACHINE_DELETE_SUCCESS,\r\n    MACHINE_DELETE_FAIL,\r\n    MACHINE_CREATE_REQUEST,\r\n    MACHINE_CREATE_SUCCESS,\r\n    MACHINE_CREATE_FAIL,\r\n    MACHINE_UPDATE_REQUEST,\r\n    MACHINE_UPDATE_SUCCESS,\r\n    MACHINE_UPDATE_FAIL,\r\n    MACHINE_UPDATE_RESET,\r\n} from './../constants/productConstants.js'\r\n\r\nexport const listLendMachineProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_MACHINE_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/lendMachines')\r\n\r\n        dispatch({\r\n            type: PRODUCT_MACHINE_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_MACHINE_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listLendMachineProductsDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_MACHINE_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/lendMachines/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_MACHINE_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_MACHINE_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteLendMachineProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: MACHINE_DELETE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/lendMachines/${id}`, config)\r\n\r\n        dispatch({\r\n            type: MACHINE_DELETE_SUCCESS,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MACHINE_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createLendMachine = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: MACHINE_CREATE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/lendMachines`, {}, config)\r\n\r\n        dispatch({\r\n            type: MACHINE_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MACHINE_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateLendMachine = (machine) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: MACHINE_UPDATE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/lendMachines/${machine._id}`, machine, config)\r\n\r\n        dispatch({\r\n            type: MACHINE_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({ type: MACHINE_UPDATE_RESET })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: MACHINE_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}