{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Anuradha\\\\Desktop\\\\New folder\\\\-Spice\\\\frontend\\\\src\\\\screens\\\\Order\\\\OrderScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { Container, Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from './../../components/Loader/Loader';\nimport Message from '../../components/Message/Message';\nimport { getOrderDetails, payOrder, deliverOrder } from './../../actions/orderAction';\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from './../../constants/orderConstant';\nimport Meta from '../../components/Helmet/Meta';\n\nconst OrderScreen = ({\n  match\n}) => {\n  _s();\n\n  const orderId = match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const dispatch = useDispatch();\n  let history = useHistory();\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    success: successPay,\n    loading: loadingPay\n  } = orderPay;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const orderDeliver = useSelector(state => state.orderDeliver);\n  const {\n    success: successDeliver,\n    loading: loadingDeliver\n  } = orderDeliver;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } // Add paypal script to body\n\n\n    const addPayPalScript = async () => {\n      const {\n        data: clientId\n      } = await axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n\n      script.onload = () => {\n        setSdkReady(true);\n      };\n\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay || successDeliver) {\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch({\n        type: ORDER_DELIVER_RESET\n      });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, successPay, order, successDeliver, history, userInfo]);\n\n  const onSuccessPaymentHandler = paymentResult => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  }; // const itemsPrice = order.totalPrice - (order.taxPrice + order.shippingPrice)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: \"Agrocare | Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginTop: '120px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Order \", order._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Shipping\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Name: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 53\n                }, this), order.user.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Email / NIC: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `mailto:${order.user.email}`,\n                  children: order.user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Address : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 53\n                }, this), order.shippingAddress.address, \", \", order.shippingAddress.city, ' ', order.shippingAddress.postalCode, \",\", ' ', order.shippingAddress.country]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 49\n              }, this), order.isDelivered ? /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"success\",\n                children: [\"Delivered on \", order.deliveredAt]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 55\n              }, this) : /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"danger\",\n                children: \"Not Delivered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Payment Method\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Method : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 53\n                }, this), order.paymentMethod]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 49\n              }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"success\",\n                children: [\"Paid on \", order.paidAt]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 55\n              }, this) : /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"danger\",\n                children: \"Not Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Order Items\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 49\n              }, this), order.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n                children: \"Order is empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 55\n              }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n                variant: \"flush\",\n                children: order.orderItems.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: 1,\n                      children: /*#__PURE__*/_jsxDEV(Image, {\n                        src: item.image,\n                        alt: item.name,\n                        fluid: true,\n                        rounded: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 141,\n                        columnNumber: 81\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 77\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 77\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: 4,\n                      children: `${item.qty} x RS. ${item.price} = RS. ${item.qty * item.price}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 77\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 73\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 69\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Order Summary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Total Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: `RS. ${order.totalPrice - (order.taxPrice + order.shippingPrice).toFixed(2)}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Shipping\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: `RS. ${order.shippingPrice}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Tax\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: `RS. ${order.taxPrice}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: `RS. ${order.totalPrice}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 66\n              }, this), !order.isPaid && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [loadingPay && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 77\n                }, this), !sdkReady ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 75\n                }, this) : /*#__PURE__*/_jsxDEV(PayPalButton, {\n                  amount: order.totalPrice,\n                  onSuccess: onSuccessPaymentHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 65\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 57\n              }, this), loadingDeliver && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 68\n              }, this), userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  className: \"btn btn-block\",\n                  onClick: deliverHandler,\n                  children: \" Mark as delivered \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 61\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderScreen, \"zkTXjVZu4VdtWxzi/goTLiyUbx0=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["C:/Users/Anuradha/Desktop/New folder/-Spice/frontend/src/screens/Order/OrderScreen.jsx"],"names":["React","useEffect","useState","axios","PayPalButton","Container","Row","Col","ListGroup","Image","Card","Button","useHistory","useDispatch","useSelector","Loader","Message","getOrderDetails","payOrder","deliverOrder","ORDER_PAY_RESET","ORDER_DELIVER_RESET","Meta","OrderScreen","match","orderId","params","id","sdkReady","setSdkReady","dispatch","history","orderDetails","state","order","loading","error","orderPay","success","successPay","loadingPay","userLogin","userInfo","orderDeliver","successDeliver","loadingDeliver","push","addPayPalScript","data","clientId","get","script","document","createElement","type","src","async","onload","body","appendChild","isPaid","window","paypal","onSuccessPaymentHandler","paymentResult","deliverHandler","marginTop","_id","user","name","email","shippingAddress","address","city","postalCode","country","isDelivered","deliveredAt","paymentMethod","paidAt","length","orderItems","map","item","index","image","qty","price","totalPrice","taxPrice","shippingPrice","toFixed","isAdmin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    ListGroup,\r\n    Image,\r\n    Card,\r\n    Button\r\n} from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './../../components/Loader/Loader'\r\nimport Message from '../../components/Message/Message'\r\nimport { getOrderDetails, payOrder, deliverOrder } from './../../actions/orderAction'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from './../../constants/orderConstant'\r\nimport Meta from '../../components/Helmet/Meta'\r\n\r\nconst OrderScreen = ({ match }) => {\r\n\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { success: successPay, loading: loadingPay } = orderPay\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { success: successDeliver, loading: loadingDeliver } = orderDeliver\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        // Add paypal script to body\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, orderId, successPay, order, successDeliver, history, userInfo])\r\n\r\n    const onSuccessPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n    // const itemsPrice = order.totalPrice - (order.taxPrice + order.shippingPrice)\r\n\r\n    return (\r\n        <div>\r\n            <Meta\r\n                title=\"Agrocare | Order\"\r\n            />\r\n            {\r\n                loading\r\n                    ? <Loader />\r\n                    : error ? <Message variant=\"danger\">{error}</Message>\r\n                        : (\r\n                            <Container style={{ marginTop: '120px' }}>\r\n                                <h2>Order {order._id}</h2>\r\n                                <Row>\r\n                                    <Col md={8}>\r\n                                        <ListGroup variant='flush' className=\"mb-3\">\r\n                                            <ListGroup.Item>\r\n                                                <h1>Shipping</h1>\r\n                                                <p>\r\n                                                    <strong>Name: </strong>{order.user.name}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <strong>Email / NIC: </strong>\r\n                                                    <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                                                </p>\r\n                                                <p>\r\n                                                    <strong>Address : </strong>\r\n                                                    {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                                                    {order.shippingAddress.postalCode},{' '}\r\n                                                    {order.shippingAddress.country}\r\n                                                </p>\r\n                                                {order.isDelivered\r\n                                                    ? <Message variant=\"success\">Delivered on {order.deliveredAt}</Message>\r\n                                                    : <Message variant=\"danger\">Not Delivered</Message>\r\n                                                }\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <h2>Payment Method</h2>\r\n                                                <p>\r\n                                                    <strong>Method : </strong>\r\n                                                    {order.paymentMethod}\r\n                                                </p>\r\n                                                {order.isPaid\r\n                                                    ? <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n                                                    : <Message variant=\"danger\">Not Paid</Message>\r\n                                                }\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <h2>Order Items</h2>\r\n                                                {order.length === 0\r\n                                                    ? <Message>Order is empty</Message>\r\n                                                    : (\r\n                                                        <ListGroup variant=\"flush\">\r\n                                                            {\r\n                                                                order.orderItems.map((item, index) => (\r\n                                                                    <ListGroup.Item key={index}>\r\n                                                                        <Row>\r\n                                                                            <Col md={1}>\r\n                                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                                            </Col>\r\n                                                                            <Col>\r\n                                                                                {item.name}\r\n                                                                            </Col>\r\n                                                                            <Col md={4}>\r\n                                                                                {`${item.qty} x RS. ${item.price} = RS. ${item.qty * item.price}`}\r\n                                                                            </Col>\r\n                                                                        </Row>\r\n                                                                    </ListGroup.Item>\r\n                                                                ))\r\n                                                            }\r\n                                                        </ListGroup>\r\n                                                    )\r\n                                                }\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <Card>\r\n                                            <ListGroup variant=\"flush\">\r\n                                                <ListGroup.Item>\r\n                                                    <h2>Order Summary</h2>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Total Price</Col>\r\n                                                        <Col>{`RS. ${(order.totalPrice - (order.taxPrice + order.shippingPrice).toFixed(2))}`}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Shipping</Col>\r\n                                                        <Col>{`RS. ${order.shippingPrice}`}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Tax</Col>\r\n                                                        <Col>{`RS. ${order.taxPrice}`}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item><ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Total</Col>\r\n                                                        <Col>{`RS. ${order.totalPrice}`}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                {\r\n                                                    !order.isPaid && (\r\n                                                        <ListGroup.Item>\r\n                                                            { loadingPay && <Loader />}\r\n                                                            { !sdkReady ? <Loader /> : (\r\n                                                                <PayPalButton\r\n                                                                    amount={order.totalPrice}\r\n                                                                    onSuccess={onSuccessPaymentHandler}\r\n                                                                />\r\n                                                            )}\r\n                                                        </ListGroup.Item>\r\n                                                    )\r\n                                                }\r\n                                                {loadingDeliver && <Loader />}\r\n                                                {\r\n                                                    userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                                        <ListGroup.Item>\r\n                                                            <Button\r\n                                                                type='button'\r\n                                                                className='btn btn-block'\r\n                                                                onClick={deliverHandler}\r\n                                                            > Mark as delivered </Button>\r\n                                                        </ListGroup.Item>\r\n                                                    )\r\n                                                }\r\n                                            </ListGroup>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n"]},"metadata":{},"sourceType":"module"}