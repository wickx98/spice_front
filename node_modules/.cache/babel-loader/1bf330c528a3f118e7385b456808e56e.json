{"ast":null,"code":"import axios from 'axios';\nimport { CONSUMER_PRODUCT_LIST_REQUEST, CONSUMER_PRODUCT_LIST_SUCCESS, CONSUMER_PRODUCT_LIST_FAIL, CONSUMER_PRODUCT_DETAILS_REQUEST, CONSUMER_PRODUCT_DETAILS_SUCCESS, CONSUMER_PRODUCT_DETAILS_FAIL, CONSUMER_DELETE_REQUEST, CONSUMER_DELETE_SUCCESS, CONSUMER_DELETE_FAIL, CONSUMER_CREATE_REQUEST, CONSUMER_CREATE_SUCCESS, CONSUMER_CREATE_FAIL, CONSUMER_UPDATE_REQUEST, CONSUMER_UPDATE_SUCCESS, CONSUMER_UPDATE_FAIL, CONSUMER_UPDATE_RESET } from './../constants/productConstants';\nexport const listConsumerProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: CONSUMER_PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/consumer');\n    dispatch({\n      type: CONSUMER_PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CONSUMER_PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listConsumerProductsDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: CONSUMER_PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/consumer/${id}`);\n    dispatch({\n      type: CONSUMER_PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CONSUMER_PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteConsumerProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CONSUMER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/consumer/${id}`, config);\n    dispatch({\n      type: CONSUMER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: CONSUMER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createConsumer = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CONSUMER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/consumer/`, {}, config);\n    dispatch({\n      type: CONSUMER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CONSUMER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateConsumer = consumer => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CONSUMER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/consumer/${consumer._id}`, consumer, config);\n    dispatch({\n      type: CONSUMER_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CONSUMER_UPDATE_RESET\n    });\n  } catch (error) {\n    dispatch({\n      type: CONSUMER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Anuradha/Desktop/New folder/-Spice/frontend/src/actions/consumerProductAction.js"],"names":["axios","CONSUMER_PRODUCT_LIST_REQUEST","CONSUMER_PRODUCT_LIST_SUCCESS","CONSUMER_PRODUCT_LIST_FAIL","CONSUMER_PRODUCT_DETAILS_REQUEST","CONSUMER_PRODUCT_DETAILS_SUCCESS","CONSUMER_PRODUCT_DETAILS_FAIL","CONSUMER_DELETE_REQUEST","CONSUMER_DELETE_SUCCESS","CONSUMER_DELETE_FAIL","CONSUMER_CREATE_REQUEST","CONSUMER_CREATE_SUCCESS","CONSUMER_CREATE_FAIL","CONSUMER_UPDATE_REQUEST","CONSUMER_UPDATE_SUCCESS","CONSUMER_UPDATE_FAIL","CONSUMER_UPDATE_RESET","listConsumerProducts","dispatch","type","data","get","payload","error","response","message","listConsumerProductsDetails","id","deleteConsumerProduct","getState","userLogin","userInfo","config","headers","Authorization","token","delete","createConsumer","post","updateConsumer","consumer","put","_id"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {\r\n    CONSUMER_PRODUCT_LIST_REQUEST,\r\n    CONSUMER_PRODUCT_LIST_SUCCESS,\r\n    CONSUMER_PRODUCT_LIST_FAIL,\r\n    CONSUMER_PRODUCT_DETAILS_REQUEST,\r\n    CONSUMER_PRODUCT_DETAILS_SUCCESS,\r\n    CONSUMER_PRODUCT_DETAILS_FAIL,\r\n    CONSUMER_DELETE_REQUEST,\r\n    CONSUMER_DELETE_SUCCESS,\r\n    CONSUMER_DELETE_FAIL,\r\n    CONSUMER_CREATE_REQUEST,\r\n    CONSUMER_CREATE_SUCCESS,\r\n    CONSUMER_CREATE_FAIL,\r\n    CONSUMER_UPDATE_REQUEST,\r\n    CONSUMER_UPDATE_SUCCESS,\r\n    CONSUMER_UPDATE_FAIL,\r\n    CONSUMER_UPDATE_RESET,\r\n} from './../constants/productConstants'\r\n\r\nexport const listConsumerProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CONSUMER_PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/consumer')\r\n\r\n        dispatch({\r\n            type: CONSUMER_PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CONSUMER_PRODUCT_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listConsumerProductsDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CONSUMER_PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/consumer/${id}`)\r\n\r\n        dispatch({\r\n            type: CONSUMER_PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CONSUMER_PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteConsumerProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CONSUMER_DELETE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/consumer/${id}`, config)\r\n\r\n        dispatch({\r\n            type: CONSUMER_DELETE_SUCCESS,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CONSUMER_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createConsumer = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CONSUMER_CREATE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/consumer/`, {}, config)\r\n\r\n        dispatch({\r\n            type: CONSUMER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CONSUMER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateConsumer = (consumer) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CONSUMER_UPDATE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/consumer/${consumer._id}`, consumer, config)\r\n\r\n        dispatch({\r\n            type: CONSUMER_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({ type: CONSUMER_UPDATE_RESET })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CONSUMER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}