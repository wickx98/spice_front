{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Anuradha\\\\Desktop\\\\New folder\\\\-Spice\\\\frontend\\\\src\\\\components\\\\SupplierProductEdit\\\\SupplierProductEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from './../Message/Message';\nimport Loader from './../Loader/Loader';\nimport FormContainer from './../FormContainer/FormContainer';\nimport { updateSupplierProduct, getroductsDetails } from './../../actions/supplierProduct';\nimport { SUPPLIER_PRODUCT_UPDATE_RESET } from './../../constants/supplierConstant';\nimport Meta from '../Helmet/Meta';\n\nconst SupplierProductEdit = ({\n  match\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [image, setImage] = useState('');\n  const [description, setDescription] = useState('');\n  const [email, setEmail] = useState('');\n  const [address, setAddress] = useState('');\n  const [cropSelection, setCropSelection] = useState('');\n  const [storage, setStorage] = useState('');\n  const [phonenumber, setPhonenumber] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const productId = match.params.id;\n  const dispatch = useDispatch();\n  let history = useHistory();\n  const FarmerProductDetails = useSelector(state => state.FarmerProductDetails);\n  const {\n    loading,\n    product,\n    error\n  } = FarmerProductDetails;\n  const farmerProductUpdate = useSelector(state => state.farmerProductUpdate);\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate\n  } = farmerProductUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: SUPPLIER_PRODUCT_UPDATE_RESET\n      });\n      history.push('/profile');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(getroductsDetails(productId));\n      } else {\n        setName(product.name);\n        setDescription(product.description);\n        setEmail(product.email);\n        setAddress(product.address);\n        setImage(product.image);\n        setCropSelection(product.cropSelection);\n        setStorage(product.storage);\n        setPhonenumber(product.phonenumber);\n      }\n    }\n  }, [history, product, dispatch, productId, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateSupplierProduct({\n      _id: productId,\n      name,\n      email,\n      address,\n      cropSelection,\n      storage,\n      image,\n      phonenumber,\n      description\n    }));\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginBottom: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: \"Agrocare | Supplier Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginTop: '100px',\n          textAlign: 'center'\n        },\n        children: \"Product Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profile\",\n        className: \"btn btn-light my-3\",\n        children: \"GO BACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 27\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 35\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }, this), successUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: \"Profile Updated!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\"Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'red'\n                  },\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 50\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"name\",\n                placeholder: \"Enter name\",\n                value: name,\n                required: true,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\"Email Address / NIC \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'red'\n                  },\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 65\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"nic\",\n                placeholder: \"Enter email or NIC\",\n                value: email,\n                required: true,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"address\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\"Address \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'red'\n                  },\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"address\",\n                as: \"textarea\",\n                rows: 1,\n                placeholder: \"Enter address\",\n                value: address,\n                required: true,\n                onChange: e => setAddress(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"cropSelection\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\"Crop Selection \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'red'\n                  },\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 60\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"cropSelection\",\n                placeholder: \"Enter crop selection\",\n                value: cropSelection,\n                required: true,\n                onChange: e => setCropSelection(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"storage\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\"Product Size \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'red'\n                  },\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"storage\",\n                placeholder: \"Enter size (kg)\",\n                value: storage,\n                required: true,\n                onChange: e => setStorage(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"image\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\"Image \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'red'\n                  },\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter image url\",\n                value: image,\n                required: true,\n                onChange: e => setImage(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n                id: \"image-file\",\n                label: \"Choose File\",\n                custom: true,\n                onChange: uploadFileHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 47\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"phonenumber\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\"Phone Number \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'red'\n                  },\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"phonenumber\",\n                placeholder: \"Enter phonenumber\",\n                value: phonenumber,\n                required: true,\n                onChange: e => setPhonenumber(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"description\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\"Description \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'red'\n                  },\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                rows: 3,\n                type: \"description\",\n                placeholder: \"Enter description\",\n                value: description,\n                required: true,\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SupplierProductEdit, \"/WfOWHY83CTHjWf8rwlGENzfZPE=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = SupplierProductEdit;\nexport default SupplierProductEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"SupplierProductEdit\");","map":{"version":3,"sources":["C:/Users/Anuradha/Desktop/New folder/-Spice/frontend/src/components/SupplierProductEdit/SupplierProductEdit.jsx"],"names":["React","useState","useEffect","axios","Form","Button","Container","Row","Col","Link","useHistory","useDispatch","useSelector","Message","Loader","FormContainer","updateSupplierProduct","getroductsDetails","SUPPLIER_PRODUCT_UPDATE_RESET","Meta","SupplierProductEdit","match","name","setName","image","setImage","description","setDescription","email","setEmail","address","setAddress","cropSelection","setCropSelection","storage","setStorage","phonenumber","setPhonenumber","uploading","setUploading","productId","params","id","dispatch","history","FarmerProductDetails","state","loading","product","error","farmerProductUpdate","loadingUpdate","success","successUpdate","errorUpdate","type","push","_id","submitHandler","e","preventDefault","uploadFileHandler","file","target","files","formData","FormData","append","config","headers","data","post","console","marginBottom","marginTop","textAlign","color","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n    Form,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../Message/Message'\r\nimport Loader from './../Loader/Loader'\r\nimport FormContainer from './../FormContainer/FormContainer'\r\nimport { updateSupplierProduct, getroductsDetails } from './../../actions/supplierProduct'\r\nimport { SUPPLIER_PRODUCT_UPDATE_RESET } from './../../constants/supplierConstant'\r\nimport Meta from '../Helmet/Meta'\r\n\r\nconst SupplierProductEdit = ({ match }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [cropSelection, setCropSelection] = useState('')\r\n    const [storage, setStorage] = useState('')\r\n    const [phonenumber, setPhonenumber] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const productId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const FarmerProductDetails = useSelector(state => state.FarmerProductDetails)\r\n    const { loading, product, error } = FarmerProductDetails\r\n\r\n    const farmerProductUpdate = useSelector(state => state.farmerProductUpdate)\r\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = farmerProductUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: SUPPLIER_PRODUCT_UPDATE_RESET })\r\n            history.push('/profile')\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(getroductsDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setDescription(product.description)\r\n                setEmail(product.email)\r\n                setAddress(product.address)\r\n                setImage(product.image)\r\n                setCropSelection(product.cropSelection)\r\n                setStorage(product.storage)\r\n                setPhonenumber(product.phonenumber)\r\n            }\r\n        }\r\n    }, [history, product, dispatch, productId, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateSupplierProduct({\r\n            _id: productId,\r\n            name,\r\n            email,\r\n            address,\r\n            cropSelection,\r\n            storage,\r\n            image,\r\n            phonenumber,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container style={{ marginBottom: '50px' }}>\r\n            <Meta\r\n                title=\"Agrocare | Supplier Edit\"\r\n            />\r\n            <FormContainer>\r\n                <h2 style={{ marginTop: '100px', textAlign: 'center' }}>Product Profile</h2>\r\n                <Link to='/profile' className='btn btn-light my-3'>\r\n                    GO BACK\r\n                </Link>\r\n                {loading && <Loader />}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {successUpdate && <Message variant='success'>Profile Updated!</Message>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"name\"\r\n                                    placeholder=\"Enter name\"\r\n                                    value={name}\r\n                                    required\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address / NIC <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"nic\"\r\n                                    placeholder=\"Enter email or NIC\"\r\n                                    value={email}\r\n                                    required\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='address'>\r\n                                <Form.Label>Address <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"address\"\r\n                                    as=\"textarea\" rows={1}\r\n                                    placeholder=\"Enter address\"\r\n                                    value={address}\r\n                                    required\r\n                                    onChange={(e) => setAddress(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='cropSelection'>\r\n                                <Form.Label>Crop Selection <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"cropSelection\"\r\n                                    placeholder=\"Enter crop selection\"\r\n                                    value={cropSelection}\r\n                                    required\r\n                                    onChange={(e) => setCropSelection(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='storage'>\r\n                                <Form.Label>Product Size <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"storage\"\r\n                                    placeholder=\"Enter size (kg)\"\r\n                                    value={storage}\r\n                                    required\r\n                                    onChange={(e) => setStorage(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter image url\"\r\n                                    value={image}\r\n                                    required\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                ></Form.Control>\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                ></Form.File>\r\n                                {uploading && <Loader />}\r\n                            </Form.Group>\r\n                            <Form.Group controlId='phonenumber'>\r\n                                <Form.Label>Phone Number <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"phonenumber\"\r\n                                    placeholder=\"Enter phonenumber\"\r\n                                    value={phonenumber}\r\n                                    required\r\n                                    onChange={(e) => setPhonenumber(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\" rows={3}\r\n                                    type=\"description\"\r\n                                    placeholder=\"Enter description\"\r\n                                    value={description}\r\n                                    required\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <br />\r\n                            <Button type=\"submit\" variant=\"primary\">Submit</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </FormContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SupplierProductEdit \r\n"]},"metadata":{},"sourceType":"module"}