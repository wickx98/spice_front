{"ast":null,"code":"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESSS, CART_SAVE_PAYMENT_METHOD } from './../constants/cartConstants';\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/seeds/${id}`);\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        seed: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty\n      }\n    });\n  } catch (error) {\n    try {\n      const {\n        data\n      } = await axios.get(`/api/lendMachines/${id}`);\n      dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n          seed: data._id,\n          name: data.name,\n          image: data.image,\n          price: data.price,\n          countInStock: data.quantity,\n          qty\n        }\n      });\n    } catch (error) {\n      const {\n        data\n      } = await axios.get(`/api/consumer/${id}`);\n      dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n          seed: data._id,\n          name: data.prod_name,\n          image: data.image,\n          price: data.price,\n          countInStock: data.quantity,\n          qty\n        }\n      });\n    }\n  }\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cartSeed.cartItems));\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cartSeed.cartItems));\n};\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESSS,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};","map":{"version":3,"sources":["C:/Users/Anuradha/Desktop/New folder/-Spice/frontend/src/actions/cartActions.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESSS","CART_SAVE_PAYMENT_METHOD","addToCart","id","qty","dispatch","getState","data","get","type","payload","seed","_id","name","image","price","countInStock","error","quantity","prod_name","localStorage","setItem","JSON","stringify","cartSeed","cartItems","removeFromCart","saveShippingAddress","savePaymentMethod"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,aADJ,EAEIC,gBAFJ,EAGIC,2BAHJ,EAIIC,wBAJJ,QAKO,8BALP;AAOA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,GAAL,KAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,GAAN,CAAW,cAAaL,EAAG,EAA3B,CAAvB;AACAE,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEX,aADD;AAELY,MAAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAEJ,IAAI,CAACK,GADN;AAELC,QAAAA,IAAI,EAAEN,IAAI,CAACM,IAFN;AAGLC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAHP;AAILC,QAAAA,KAAK,EAAER,IAAI,CAACQ,KAJP;AAKLC,QAAAA,YAAY,EAAET,IAAI,CAACS,YALd;AAMLZ,QAAAA;AANK;AAFJ,KAAD,CAAR;AAWH,GAbD,CAaE,OAAOa,KAAP,EAAc;AACZ,QAAI;AACA,YAAM;AAAEV,QAAAA;AAAF,UAAW,MAAMV,KAAK,CAACW,GAAN,CAAW,qBAAoBL,EAAG,EAAlC,CAAvB;AACAE,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEX,aADD;AAELY,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAEJ,IAAI,CAACK,GADN;AAELC,UAAAA,IAAI,EAAEN,IAAI,CAACM,IAFN;AAGLC,UAAAA,KAAK,EAAEP,IAAI,CAACO,KAHP;AAILC,UAAAA,KAAK,EAAER,IAAI,CAACQ,KAJP;AAKLC,UAAAA,YAAY,EAAET,IAAI,CAACW,QALd;AAMLd,UAAAA;AANK;AAFJ,OAAD,CAAR;AAWH,KAbD,CAaE,OAAOa,KAAP,EAAc;AACZ,YAAM;AAAEV,QAAAA;AAAF,UAAW,MAAMV,KAAK,CAACW,GAAN,CAAW,iBAAgBL,EAAG,EAA9B,CAAvB;AACAE,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEX,aADD;AAELY,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAEJ,IAAI,CAACK,GADN;AAELC,UAAAA,IAAI,EAAEN,IAAI,CAACY,SAFN;AAGLL,UAAAA,KAAK,EAAEP,IAAI,CAACO,KAHP;AAILC,UAAAA,KAAK,EAAER,IAAI,CAACQ,KAJP;AAKLC,UAAAA,YAAY,EAAET,IAAI,CAACW,QALd;AAMLd,UAAAA;AANK;AAFJ,OAAD,CAAR;AAWH;AACJ;;AAEDgB,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAejB,QAAQ,GAAGkB,QAAX,CAAoBC,SAAnC,CAAlC;AACH,CA7CM;AA+CP,OAAO,MAAMC,cAAc,GAAIvB,EAAD,IAAQ,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC1DD,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAEV,gBADD;AAELW,IAAAA,OAAO,EAAEP;AAFJ,GAAD,CAAR;AAKAiB,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAejB,QAAQ,GAAGkB,QAAX,CAAoBC,SAAnC,CAAlC;AACH,CAPM;AASP,OAAO,MAAME,mBAAmB,GAAIpB,IAAD,IAAWF,QAAD,IAAc;AACvDA,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAET,2BADD;AAELU,IAAAA,OAAO,EAAEH;AAFJ,GAAD,CAAR;AAKAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAehB,IAAf,CAAxC;AACH,CAPM;AASP,OAAO,MAAMqB,iBAAiB,GAAIrB,IAAD,IAAWF,QAAD,IAAc;AACrDA,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAER,wBADD;AAELS,IAAAA,OAAO,EAAEH;AAFJ,GAAD,CAAR;AAKAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAehB,IAAf,CAAtC;AACH,CAPM","sourcesContent":["import axios from 'axios'\r\nimport { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESSS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from './../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    try {\r\n        const { data } = await axios.get(`/api/seeds/${id}`)\r\n        dispatch({\r\n            type: CART_ADD_ITEM,\r\n            payload: {\r\n                seed: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty,\r\n            }\r\n        })\r\n    } catch (error) {\r\n        try {\r\n            const { data } = await axios.get(`/api/lendMachines/${id}`)\r\n            dispatch({\r\n                type: CART_ADD_ITEM,\r\n                payload: {\r\n                    seed: data._id,\r\n                    name: data.name,\r\n                    image: data.image,\r\n                    price: data.price,\r\n                    countInStock: data.quantity,\r\n                    qty,\r\n                }\r\n            })\r\n        } catch (error) { \r\n            const { data } = await axios.get(`/api/consumer/${id}`)\r\n            dispatch({\r\n                type: CART_ADD_ITEM,\r\n                payload: {\r\n                    seed: data._id,\r\n                    name: data.prod_name,\r\n                    image: data.image,\r\n                    price: data.price,\r\n                    countInStock: data.quantity,\r\n                    qty,\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cartSeed.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cartSeed.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESSS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}"]},"metadata":{},"sourceType":"module"}