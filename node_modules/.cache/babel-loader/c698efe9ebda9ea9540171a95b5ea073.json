{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Anuradha\\\\Desktop\\\\New folder\\\\-Spice\\\\frontend\\\\src\\\\components\\\\DashBoard\\\\Map\\\\Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Image } from 'react-bootstrap';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from 'react-google-maps';\nimport Message from '../../Message/Message';\nimport Loader from '../../Loader/Loader';\nimport { listSupplierProducts } from '../../../actions/supplierProduct';\nimport MapStyles from './MapStyles';\nimport Rating from './Rating/Rating';\n\nconst Map = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  let history = useHistory();\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const supplierProductList = useSelector(state => state.supplierProductList);\n  const {\n    loading: loadingProducts,\n    error: errorProducts,\n    products\n  } = supplierProductList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (!userInfo.isAdmin && !userInfo) {\n      history.push('/login');\n    } else {\n      dispatch(listSupplierProducts());\n    }\n  }, [dispatch, history, userInfo]);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    defaultCenter: {\n      lat: 6.927079,\n      lng: 79.861244\n    },\n    defaultZoom: 10,\n    defaultOptions: {\n      styles: MapStyles\n    },\n    children: [loadingProducts ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 35\n    }, this) : errorProducts ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: errorProducts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 27\n    }, this) : products.map(place => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: place.latitude,\n        lng: place.longitude\n      },\n      onClick: () => {\n        setSelectedPlace(place);\n      },\n      icon: {\n        url: '/mapIcon.svg',\n        scaledSize: new window.google.maps.Size(25, 25)\n      }\n    }, place._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }, this)), selectedPlace && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: selectedPlace.latitude,\n        lng: selectedPlace.longitude\n      },\n      onCloseClick: () => {\n        setSelectedPlace(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          className: \"mx-auto d-block img-fluid mb-1\",\n          rounded: true,\n          width: \"120px\",\n          src: selectedPlace.image,\n          alt: selectedPlace.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: selectedPlace.cropSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Farmer: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: selectedPlace.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 105\n          }, this), \"Description: \", selectedPlace.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 73\n          }, this), \"Address: \", selectedPlace.address, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 65\n          }, this), \"Reviewed: \", selectedPlace.isReviwed ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-check\",\n              style: {\n                color: \"green\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(Rating, {\n                text: \"Rating\",\n                value: selectedPlace.rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\",\n            style: {\n              color: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"MlcKeOg1eJwybBtLbedFC3pnJa8=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = Map;\nconst WrappedMap = withScriptjs(_c2 = withGoogleMap(Map));\n_c3 = WrappedMap;\nexport default WrappedMap;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"WrappedMap$withScriptjs\");\n$RefreshReg$(_c3, \"WrappedMap\");","map":{"version":3,"sources":["C:/Users/Anuradha/Desktop/New folder/-Spice/frontend/src/components/DashBoard/Map/Map.jsx"],"names":["React","useEffect","useState","useHistory","useDispatch","useSelector","Image","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","Message","Loader","listSupplierProducts","MapStyles","Rating","Map","dispatch","history","selectedPlace","setSelectedPlace","supplierProductList","state","loading","loadingProducts","error","errorProducts","products","userLogin","userInfo","isAdmin","push","lat","lng","styles","map","place","latitude","longitude","url","scaledSize","window","google","maps","Size","_id","image","name","textAlign","cropSelection","fontWeight","description","address","isReviwed","color","rating","WrappedMap"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Image } from 'react-bootstrap'\r\nimport {\r\n    GoogleMap,\r\n    withScriptjs,\r\n    withGoogleMap,\r\n    Marker,\r\n    InfoWindow\r\n} from 'react-google-maps'\r\nimport Message from '../../Message/Message'\r\nimport Loader from '../../Loader/Loader'\r\nimport { listSupplierProducts } from '../../../actions/supplierProduct'\r\nimport MapStyles from './MapStyles'\r\nimport Rating from './Rating/Rating'\r\n\r\nconst Map = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const [selectedPlace, setSelectedPlace] = useState(null)\r\n\r\n    const supplierProductList = useSelector(state => state.supplierProductList)\r\n    const { loading: loadingProducts, error: errorProducts, products } = supplierProductList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo.isAdmin && !userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            dispatch(listSupplierProducts())\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <GoogleMap\r\n            defaultCenter={{ lat: 6.927079, lng: 79.861244 }}\r\n            defaultZoom={10}\r\n            defaultOptions={{ styles: MapStyles }}\r\n        >\r\n            {\r\n                loadingProducts ? <Loader />\r\n                    : errorProducts\r\n                        ? <Message variant='danger'>{errorProducts}</Message>\r\n                        : (\r\n                            products.map(place => (\r\n                                <Marker\r\n                                    key={place._id}\r\n                                    position={{\r\n                                        lat: place.latitude,\r\n                                        lng: place.longitude\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        setSelectedPlace(place)\r\n                                    }}\r\n                                    icon={{\r\n                                        url: '/mapIcon.svg',\r\n                                        scaledSize: new window.google.maps.Size(25, 25)\r\n                                    }}\r\n                                />\r\n                            ))\r\n                        )\r\n\r\n            }\r\n            {\r\n                selectedPlace && (\r\n                    <InfoWindow\r\n                        position={{\r\n                            lat: selectedPlace.latitude,\r\n                            lng: selectedPlace.longitude\r\n                        }}\r\n                        onCloseClick={() => {\r\n                            setSelectedPlace(null)\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            <Image className=\"mx-auto d-block img-fluid mb-1\" rounded width=\"120px\" src={selectedPlace.image} alt={selectedPlace.name} />\r\n                            <h4 style={{ textAlign: \"center\" }}>{selectedPlace.cropSelection}</h4>\r\n                            <p>\r\n                                Farmer: <span style={{ fontWeight: \"bold\" }}>{selectedPlace.name}</span><br />\r\n                                Description: {selectedPlace.description}<br />\r\n                                Address: {selectedPlace.address}<br />\r\n                                Reviewed: {\r\n                                    selectedPlace.isReviwed\r\n                                        ? (<>\r\n                                            <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                                            <p><Rating text=\"Rating\" value={selectedPlace.rating} /></p>\r\n                                        </>\r\n                                        )\r\n                                        : (<i className=\"fas fa-times\" style={{ color: \"red\" }} />)\r\n                                }\r\n                            </p>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )\r\n            }\r\n        </GoogleMap>\r\n\r\n    )\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\r\n\r\nexport default WrappedMap\r\n"]},"metadata":{},"sourceType":"module"}