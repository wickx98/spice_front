{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Anuradha\\\\Desktop\\\\New folder\\\\-Spice\\\\frontend\\\\src\\\\components\\\\DashBoard\\\\Statistics\\\\LineChart\\\\LineChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from './../../../../components/Message/Message';\nimport Loader from './../../../../components/Loader/Loader';\nimport { listUsers } from './../../../../actions/userActions';\nconst data = {\n  labels: ['December', 'January'],\n  datasets: [{\n    label: 'Users of Months',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: [1, 4, 0, 8]\n  }]\n};\n\nconst LineChart = ({\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const userList = useSelector(state => state.userList);\n  const {\n    loading,\n    error\n  } = userList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        marginTop: \"40px\",\n        textAlign: \"center\"\n      },\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 24\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LineChart, \"m8bxchS00E8VfeFQjMVhPEOklL8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["C:/Users/Anuradha/Desktop/New folder/-Spice/frontend/src/components/DashBoard/Statistics/LineChart/LineChart.jsx"],"names":["React","useEffect","Line","useDispatch","useSelector","Message","Loader","listUsers","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","LineChart","history","dispatch","userList","state","loading","error","userLogin","userInfo","isAdmin","push","marginTop","textAlign"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,0CAApB;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,SAASC,SAAT,QAA0B,mCAA1B;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,SAAb,CADC;AAETC,EAAAA,QAAQ,EAAE,CACN;AACIC,IAAAA,KAAK,EAAE,iBADX;AAEIC,IAAAA,IAAI,EAAE,KAFV;AAGIC,IAAAA,WAAW,EAAE,GAHjB;AAIIC,IAAAA,eAAe,EAAE,sBAJrB;AAKIC,IAAAA,WAAW,EAAE,oBALjB;AAMIC,IAAAA,cAAc,EAAE,MANpB;AAOIC,IAAAA,UAAU,EAAE,EAPhB;AAQIC,IAAAA,gBAAgB,EAAE,GARtB;AASIC,IAAAA,eAAe,EAAE,OATrB;AAUIC,IAAAA,gBAAgB,EAAE,oBAVtB;AAWIC,IAAAA,oBAAoB,EAAE,MAX1B;AAYIC,IAAAA,gBAAgB,EAAE,CAZtB;AAaIC,IAAAA,gBAAgB,EAAE,CAbtB;AAcIC,IAAAA,yBAAyB,EAAE,oBAd/B;AAeIC,IAAAA,qBAAqB,EAAE,qBAf3B;AAgBIC,IAAAA,qBAAqB,EAAE,CAhB3B;AAiBIC,IAAAA,WAAW,EAAE,CAjBjB;AAkBIC,IAAAA,cAAc,EAAE,EAlBpB;AAmBIpB,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAnBV,GADM;AAFD,CAAb;;AA2BA,MAAMqB,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAE/B,QAAMC,QAAQ,GAAG5B,WAAW,EAA5B;AAEA,QAAM6B,QAAQ,GAAG5B,WAAW,CAAC6B,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBH,QAA3B;AAEA,QAAMI,SAAS,GAAGhC,WAAW,CAAC6B,KAAK,IAAIA,KAAK,CAACG,SAAhB,CAA7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeD,SAArB;AAEAnC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIoC,QAAQ,IAAIA,QAAQ,CAACC,OAAzB,EAAkC;AAC9BP,MAAAA,QAAQ,CAACxB,SAAS,EAAV,CAAR;AACH,KAFD,MAEO;AACHuB,MAAAA,OAAO,CAACS,IAAR,CAAa,QAAb;AACH;AACJ,GANQ,EAMN,CAACR,QAAD,EAAWD,OAAX,EAAoBO,QAApB,CANM,CAAT;AAQA,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAAEG,QAAAA,SAAS,EAAE,MAAb;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKP,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GACFC,KAAK,gBAAG,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAH,gBAEC,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE3B;AAAZ;AAAA;AAAA;AAAA;AAAA,YALhB;AAAA,kBADJ;AAWH,CA7BD;;GAAMqB,S;UAEe1B,W,EAEAC,W,EAGCA,W;;;KAPhByB,S;AA+BN,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../../../../components/Message/Message'\r\nimport Loader from './../../../../components/Loader/Loader'\r\nimport { listUsers } from './../../../../actions/userActions'\r\n\r\nconst data = {\r\n    labels: ['December', 'January'],\r\n    datasets: [\r\n        {\r\n            label: 'Users of Months',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba(75,192,192,0.4)',\r\n            borderColor: 'rgba(75,192,192,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(75,192,192,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [1, 4, 0, 8]\r\n        }\r\n    ]\r\n};\r\n\r\nconst LineChart = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            <h4 style={{ marginTop: \"40px\", textAlign: \"center\" }}>Users</h4>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Line data={data} />\r\n                    )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n"]},"metadata":{},"sourceType":"module"}