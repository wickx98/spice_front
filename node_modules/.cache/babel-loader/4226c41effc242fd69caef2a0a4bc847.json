{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Anuradha\\\\Desktop\\\\New folder\\\\-Spice\\\\frontend\\\\src\\\\screens\\\\ProductListEdit\\\\MachineListEdit\\\\MachineListEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from './../../../components/Message/Message';\nimport Loader from './../../../components/Loader/Loader';\nimport FormContainer from './../../../components/FormContainer/FormContainer';\nimport { listLendMachineProductsDetails, updateLendMachine } from './../../../actions/productLendMachinesActions';\nimport { MACHINE_UPDATE_RESET } from '../../../constants/productConstants';\nimport Meta from '../../../components/Helmet/Meta';\n\nconst SeedListEdit = ({\n  match\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [image, setImage] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [target_plant, setTarget_plant] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [machine_power, setMachine_power] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const productId = match.params.id;\n  const dispatch = useDispatch();\n  let history = useHistory();\n  const productLendMachinesDetails = useSelector(state => state.productLendMachinesDetails);\n  const {\n    loading,\n    productLendMachines,\n    error\n  } = productLendMachinesDetails;\n  const LendMachinesUpdate = useSelector(state => state.LendMachinesUpdate);\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate\n  } = LendMachinesUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: MACHINE_UPDATE_RESET\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (!productLendMachines.name || productLendMachines._id !== productId) {\n        dispatch(listLendMachineProductsDetails(productId));\n      } else {\n        setName(productLendMachines.name);\n        setDescription(productLendMachines.description);\n        setPrice(productLendMachines.price);\n        setImage(productLendMachines.image);\n        setTarget_plant(productLendMachines.target_plant);\n        setQuantity(productLendMachines.quantity);\n        setMachine_power(productLendMachines.machine_power);\n      }\n    }\n  }, [history, productLendMachines, dispatch, productId, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateLendMachine({\n      _id: productId,\n      name,\n      image,\n      price,\n      description,\n      target_plant,\n      quantity,\n      machine_power\n    }));\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginBottom: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: \"Agrocare | Admin Machine Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginTop: '120px',\n          textAlign: 'center'\n        },\n        children: \"Lend Machine Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin/productlist\",\n        className: \"btn btn-light my-3\",\n        children: \"GO BACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 27\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 35\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }, this), successUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: \"Profile Updated!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"name\",\n                placeholder: \"Enter name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"image\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter image url\",\n                value: image,\n                onChange: e => setImage(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n                id: \"image-file\",\n                label: \"Choose File\",\n                custom: true,\n                onChange: uploadFileHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 47\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"price\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"price\",\n                placeholder: \"Enter price\",\n                value: price,\n                onChange: e => setPrice(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"description\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                rows: 3,\n                type: \"description\",\n                placeholder: \"Enter description\",\n                value: description,\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"countInStock\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Target Plant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"countInStock\",\n                placeholder: \"Enter target plant\",\n                value: target_plant,\n                onChange: e => setTarget_plant(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"quantity\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"countInStock\",\n                placeholder: \"Enter qunatity\",\n                value: quantity,\n                onChange: e => setQuantity(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"machinepower\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Machine Power\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"machinepower\",\n                placeholder: \"Enter machine power\",\n                value: machine_power,\n                onChange: e => setMachine_power(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"primary\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SeedListEdit, \"FFvLbuJZlZgWUrTTMn+45BbIch4=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = SeedListEdit;\nexport default SeedListEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeedListEdit\");","map":{"version":3,"sources":["C:/Users/Anuradha/Desktop/New folder/-Spice/frontend/src/screens/ProductListEdit/MachineListEdit/MachineListEdit.jsx"],"names":["React","useState","useEffect","axios","Form","Button","Container","Row","Col","Link","useHistory","useDispatch","useSelector","Message","Loader","FormContainer","listLendMachineProductsDetails","updateLendMachine","MACHINE_UPDATE_RESET","Meta","SeedListEdit","match","name","setName","image","setImage","description","setDescription","price","setPrice","target_plant","setTarget_plant","quantity","setQuantity","machine_power","setMachine_power","uploading","setUploading","productId","params","id","dispatch","history","productLendMachinesDetails","state","loading","productLendMachines","error","LendMachinesUpdate","loadingUpdate","success","successUpdate","errorUpdate","type","push","_id","submitHandler","e","preventDefault","uploadFileHandler","file","target","files","formData","FormData","append","config","headers","data","post","console","marginBottom","marginTop","textAlign","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n    Form,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../../../components/Message/Message'\r\nimport Loader from './../../../components/Loader/Loader'\r\nimport FormContainer from './../../../components/FormContainer/FormContainer'\r\nimport { listLendMachineProductsDetails, updateLendMachine } from './../../../actions/productLendMachinesActions'\r\nimport { MACHINE_UPDATE_RESET } from '../../../constants/productConstants'\r\nimport Meta from '../../../components/Helmet/Meta'\r\n\r\nconst SeedListEdit = ({ match }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    const [target_plant, setTarget_plant] = useState('')\r\n    const [quantity, setQuantity] = useState('')\r\n    const [machine_power, setMachine_power] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const productId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const productLendMachinesDetails = useSelector(state => state.productLendMachinesDetails)\r\n    const { loading, productLendMachines, error } = productLendMachinesDetails\r\n\r\n    const LendMachinesUpdate = useSelector(state => state.LendMachinesUpdate)\r\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = LendMachinesUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: MACHINE_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!productLendMachines.name || productLendMachines._id !== productId) {\r\n                dispatch(listLendMachineProductsDetails(productId))\r\n            } else {\r\n                setName(productLendMachines.name)\r\n                setDescription(productLendMachines.description)\r\n                setPrice(productLendMachines.price)\r\n                setImage(productLendMachines.image)\r\n                setTarget_plant(productLendMachines.target_plant)\r\n                setQuantity(productLendMachines.quantity)\r\n                setMachine_power(productLendMachines.machine_power)\r\n            }\r\n        }\r\n    }, [history, productLendMachines, dispatch, productId, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateLendMachine({\r\n            _id: productId,\r\n            name,\r\n            image,\r\n            price,\r\n            description,\r\n            target_plant,\r\n            quantity,\r\n            machine_power\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container style={{ marginBottom: '50px' }}>\r\n            <Meta\r\n                title=\"Agrocare | Admin Machine Edit\"\r\n            />\r\n            <FormContainer>\r\n                <h2 style={{ marginTop: '120px', textAlign: 'center' }}>Lend Machine Profile</h2>\r\n                <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                    GO BACK\r\n                </Link>\r\n                {loading && <Loader />}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {successUpdate && <Message variant='success'>Profile Updated!</Message>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"name\"\r\n                                    placeholder=\"Enter name\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter image url\"\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                ></Form.Control>\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                ></Form.File>\r\n                                {uploading && <Loader />}\r\n                            </Form.Group>\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"price\"\r\n                                    placeholder=\"Enter price\"\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    type=\"description\"\r\n                                    placeholder=\"Enter description\"\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Form.Group controlId='countInStock'>\r\n                                <Form.Label>Target Plant</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"countInStock\"\r\n                                    placeholder=\"Enter target plant\"\r\n                                    value={target_plant}\r\n                                    onChange={(e) => setTarget_plant(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='quantity'>\r\n                                <Form.Label>Quantity</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"countInStock\"\r\n                                    placeholder=\"Enter qunatity\"\r\n                                    value={quantity}\r\n                                    onChange={(e) => setQuantity(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='machinepower'>\r\n                                <Form.Label>Machine Power</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"machinepower\"\r\n                                    placeholder=\"Enter machine power\"\r\n                                    value={machine_power}\r\n                                    onChange={(e) => setMachine_power(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Button type=\"submit\" variant=\"primary\">Update</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </FormContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SeedListEdit \r\n"]},"metadata":{},"sourceType":"module"}